<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
    
    <context:property-placeholder location="classpath:com/config/jdbc.properties,classpath:com/config/file.properties"/>
    
	<!-- 기본 : Enables the Spring MVC @Controller programming model -->
	<annotation-driven validator="validator"/>
	<beans:bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
	
	<default-servlet-handler/>
	
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/member/**" location="file:///c:/upload/member/" />
	
	<!-- 데이터 처리 필요 없는 주소 처리 -->
	<view-controller path="/loginForm" view-name="loginForm"/><!-- homePage.jsp -->
	<view-controller path="/homePage" view-name="homePage"/><!-- homePage.jsp -->
	<view-controller path="/myPage" view-name="myPage"/><!-- myPage.jsp -->
	<view-controller path="/meetingRoom" view-name="meetingRoom"/><!-- /meetingRoom.jsp -->
	<view-controller path="/passwordSearch" view-name="passwordSearch"/><!-- /meetingRoom.jsp -->
	<view-controller path="/writeMail" view-name="mailForm"/><!-- /mailForm.jsp -->
	<view-controller path="/writeSelfMail" view-name="selfMail"/><!-- /mailForm.jsp -->
	<view-controller path="/fileBoardList" view-name="fileBoardList"/><!-- /mailForm.jsp -->
	<view-controller path="/searchFileBoard" view-name="searchFileBoard"/><!-- /mailForm.jsp -->
	
	<!-- 회원전용처리 : interceptor Bean 생성  -->
	<beans:bean id="loginCheckInterceptor" class="com.interceptor.LoginCheckInterceptor"></beans:bean>
	<!-- 회원전용처리 : interceptor 주소 처리 -->
	<interceptors>
		<interceptor>
		<!-- 회원 전용 메뉴만 인터셉터 처리를 하는게 효율적임 -->
			<mapping path="/**"/>
			<mapping path="/loginCheck/**"/>
			<exclude-mapping path="/login"/>
<!-- 			<exclude-mapping path="/api/**"/> -->
			<exclude-mapping path="/resources/**"/>
			<beans:ref bean="loginCheckInterceptor"/>
		</interceptor>
	</interceptors>
	
	<!-- prefix / suffix -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- annotation config는 component-scan에 포함됨 -->
	<context:component-scan base-package="com.*" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- MultipartResolver -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="uploadTempDir" value="${file.tempdir}"/>
		<beans:property name="maxUploadSize" value="100000000"></beans:property>
		<beans:property name="maxInMemorySize" value="100000000"></beans:property>
		<beans:property name="defaultEncoding" value="UTF-8" />
	</beans:bean>
	
	
	<!-- BeanNameViewResolver -->
	<!-- 뷰의 이름과 동일한 이름을 가지는 빈을 view로 사용 -->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
    	<beans:property name="order" value="0"/>
  	</beans:bean>
  	
  	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
	<beans:property name="messageConverters">
		<beans:list>
			<beans:ref bean="jsonMessageConverter"/>
		</beans:list>
	</beans:property>
	</beans:bean>

	<beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.GsonHttpMessageConverter">
   </beans:bean>
   
   <websocket:handlers allowed-origins="*">
		<websocket:mapping handler="chattingHandler" path="/chat/{chatroom_num}"/>
		<websocket:mapping handler="notificationHandler" path="/notification"/>
		<websocket:handshake-interceptors>
        	<beans:bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor" />
    	</websocket:handshake-interceptors>	
	</websocket:handlers>
	
	<beans:bean id="chattingHandler" class="com.webSocket.ChattingHandler"/>
	<beans:bean id="notificationHandler" class="com.webSocket.NotificationHandler"/>
   
</beans:beans>
