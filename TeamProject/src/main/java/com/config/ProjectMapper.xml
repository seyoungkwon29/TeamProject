<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ProjectMapper">
	<select id="getAllProject" resultType="ProjectDTO" parameterType="int">
		SELECT * 
		FROM project 
		WHERE project_num in (
			SELECT project_num FROM project_member
			WHERE member_num = #{member_num})
	</select>
	
	<select id="selectMembers" resultType="MemberDTO">
		select * from member where member_num != #{member_num}
	</select>
	
	<!-- 직급 or 이름으로 조건 검색 -->
	<select id="searchMembers" resultType="MemberDTO" parameterType="hashmap">
	select * from member
	  <where>
	  	<if test="member_num != null">
            member_num != #{member_num}
        </if>
            <choose>
                <when test="searchCondition == 'all'">
                    and (div_name LIKE '%' || #{searchValue} || '%' or
                     member_name LIKE '%' || #{searchValue} || '%')
                </when>
                <otherwise>
                    <if test="searchCondition == 'division'">
                        div_name LIKE '%' || #{searchValue} || '%'
                    </if>
                    <if test="searchCondition == 'memberName'">
                        member_name LIKE '%' || #{searchValue} || '%'
                    </if>
                </otherwise>
            </choose>
        </where>
	</select>
	
	<select id="createPM" parameterType="int" resultType="MemberDTO">
	 select * from member where member_num = #{member_num}
	</select>
	
	
	<select id="participatedMemberList" parameterType="int" resultType="MemberDTO">
		SELECT *
		FROM member
		WHERE member_num in(
    		SELECT member_num 
    		FROM project_member 
    		WHERE project_num = #{project_num}
		)
	</select>
	<!-- 위의 프로젝트에 참여하는 인원 중 프로젝트 매니저는 리스트에서 제외하기 위한 용도의 SQL -->
	<select id="selectProjectByProjectNum" resultType="ProjectDTO">
		SELECT * 
		FROM project
		WHERE project_num = #{project_num}
	</select>
	 <insert id="createProject" parameterType="ProjectDTO" useGeneratedKeys="true" 
	   	keyProperty="project_num" keyColumn="project_num">
        INSERT INTO project
        VALUES(
            seq_project_num.nextval,
            #{project_title},
            #{status},
            #{start_date},
            #{due_date},
            #{project_manager},
            #{member_num}
        )
    </insert>
    
    <insert id="addProjectMember" parameterType="HashMap">
    	INSERT INTO project_member 
    	VALUES(
    		#{project_num},
    		#{member_num}
    	)
    </insert>
    
    <update id="updateProject" parameterType="ProjectDTO">
    	UPDATE project 
    	SET 
			project_title = #{project_title},
			status = #{status},
			start_date = #{start_date},
			due_date = #{due_date} 
    	WHERE project_num = #{project_num}
    </update>
    
    
    <!-- 프로젝트 업데이트 SQL -->
    <select id="selectProjectMembers" parameterType="int" resultType="int">
    	SELECT member_num FROM project_member
    	WHERE project_num = #{project_num}
    </select>
    <delete id="deleteProjectMembers" parameterType="HashMap">
    	DELETE project_member WHERE project_num = #{project_num} AND member_num = #{member_num}
    </delete>
    
    
    <!-- 프로젝트 삭제시 프로젝트와 연관된 TODO들을 먼저 삭제해준다. -->
    <delete id="deleteProjectWithTodo" parameterType="int">
    	DELETE FROM todo WHERE todo_num IN (SELECT todo_num FROM project_todo WHERE project_num = #{project_num})
    </delete>
    <delete id="deleteProject" parameterType="int">
    	DELETE project WHERE project_num = #{project_num}
    </delete>
    
    
</mapper>